<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sagiri.collector.persistence.mapper.EventRecordMapper" >

    <!-- **** (Start) This will be covered, please do not modify. **** -->
    <resultMap id="BaseResultMap" type="sagiri.collector.persistence.entity.EventRecord" >
        <id column="id" property="id" />
        <result column="event_name" property="eventName" />
        <result column="event_type" property="eventType" />
        <result column="event_time" property="eventTime" />
        <result column="distinct_id" property="distinctId" />
        <result column="anonymous_id" property="anonymousId" />
        <result column="client_id" property="clientId" />
        <result column="client_app_id" property="clientAppId" />
        <result column="client_device_id" property="clientDeviceId" />
        <result column="client_user_agent" property="clientUserAgent" />
        <result column="client_net_address" property="clientNetAddress" />
        <result column="interface_id" property="interfaceId" />
        <result column="server_id" property="serverId" />
        <result column="server_app_id" property="serverAppId" />
        <result column="properties_json" property="propertiesJson" />
        <result column="creator_id" property="creatorId" />
        <result column="create_time" property="createTime" />
        <result column="updater_id" property="updaterId" />
        <result column="update_time" property="updateTime" />
        <result column="alive_flag" property="aliveFlag" />
    </resultMap>

    <sql id="Base_Column_List" >
        `id`,
        `event_name`,
        `event_type`,
        `event_time`,
        `distinct_id`,
        `anonymous_id`,
        `client_id`,
        `client_app_id`,
        `client_device_id`,
        `client_user_agent`,
        `client_net_address`,
        `interface_id`,
        `server_id`,
        `server_app_id`,
        `properties_json`,
        `creator_id`,
        `create_time`,
        `updater_id`,
        `update_time`,
        `alive_flag`
    </sql>

    <sql id="Base_Selective_Where" >
        <if test="id != null and id != ''">and `id` = #{id}</if>
        <if test="eventName != null and eventName != ''">and `event_name` = #{eventName}</if>
        <if test="eventType != null and eventType != ''">and `event_type` = #{eventType}</if>
        <if test="eventTime != null">and `event_time` = #{eventTime}</if>
        <if test="distinctId != null and distinctId != ''">and `distinct_id` = #{distinctId}</if>
        <if test="anonymousId != null and anonymousId != ''">and `anonymous_id` = #{anonymousId}</if>
        <if test="clientId != null and clientId != ''">and `client_id` = #{clientId}</if>
        <if test="clientAppId != null and clientAppId != ''">and `client_app_id` = #{clientAppId}</if>
        <if test="clientDeviceId != null and clientDeviceId != ''">and `client_device_id` = #{clientDeviceId}</if>
        <if test="clientUserAgent != null and clientUserAgent != ''">and `client_user_agent` = #{clientUserAgent}</if>
        <if test="clientNetAddress != null and clientNetAddress != ''">and `client_net_address` = #{clientNetAddress}</if>
        <if test="interfaceId != null and interfaceId != ''">and `interface_id` = #{interfaceId}</if>
        <if test="serverId != null and serverId != ''">and `server_id` = #{serverId}</if>
        <if test="serverAppId != null and serverAppId != ''">and `server_app_id` = #{serverAppId}</if>
        <if test="propertiesJson != null and propertiesJson != ''">and `properties_json` = #{propertiesJson}</if>
        <if test="creatorId != null and creatorId != ''">and `creator_id` = #{creatorId}</if>
        <if test="createTime != null">and `create_time` = #{createTime}</if>
        <if test="updaterId != null and updaterId != ''">and `updater_id` = #{updaterId}</if>
        <if test="updateTime != null">and `update_time` = #{updateTime}</if>
        <if test="aliveFlag != null">and `alive_flag` = #{aliveFlag}</if>
    </sql>

    <insert id="insert" parameterType="sagiri.collector.persistence.entity.EventRecord" >
        insert into `t_event_record` (
            <include refid="Base_Column_List" />
        )
        values (
            #{id},
            #{eventName},
            #{eventType},
            #{eventTime},
            #{distinctId},
            #{anonymousId},
            #{clientId},
            #{clientAppId},
            #{clientDeviceId},
            #{clientUserAgent},
            #{clientNetAddress},
            #{interfaceId},
            #{serverId},
            #{serverAppId},
            #{propertiesJson},
            #{creatorId},
            #{createTime},
            #{updaterId},
            #{updateTime},
            #{aliveFlag}
        )
    </insert>

    <insert id="insertBatch" >
        insert into `t_event_record` (
            <include refid="Base_Column_List" />
        )
        values
        <foreach collection="recordList" index="index" item="item" separator="," >
        (
            #{item.id},
            #{item.eventName},
            #{item.eventType},
            #{item.eventTime},
            #{item.distinctId},
            #{item.anonymousId},
            #{item.clientId},
            #{item.clientAppId},
            #{item.clientDeviceId},
            #{item.clientUserAgent},
            #{item.clientNetAddress},
            #{item.interfaceId},
            #{item.serverId},
            #{item.serverAppId},
            #{item.propertiesJson},
            #{item.creatorId},
            #{item.createTime},
            #{item.updaterId},
            #{item.updateTime},
            #{item.aliveFlag}
        )
        </foreach>
    </insert>

    <insert id="insertSelective" parameterType="sagiri.collector.persistence.entity.EventRecord" >
        insert into `t_event_record`
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >`id`, </if>
            <if test="eventName != null" >`event_name`, </if>
            <if test="eventType != null" >`event_type`, </if>
            <if test="eventTime != null" >`event_time`, </if>
            <if test="distinctId != null" >`distinct_id`, </if>
            <if test="anonymousId != null" >`anonymous_id`, </if>
            <if test="clientId != null" >`client_id`, </if>
            <if test="clientAppId != null" >`client_app_id`, </if>
            <if test="clientDeviceId != null" >`client_device_id`, </if>
            <if test="clientUserAgent != null" >`client_user_agent`, </if>
            <if test="clientNetAddress != null" >`client_net_address`, </if>
            <if test="interfaceId != null" >`interface_id`, </if>
            <if test="serverId != null" >`server_id`, </if>
            <if test="serverAppId != null" >`server_app_id`, </if>
            <if test="propertiesJson != null" >`properties_json`, </if>
            <if test="creatorId != null" >`creator_id`, </if>
            <if test="createTime != null" >`create_time`, </if>
            <if test="updaterId != null" >`updater_id`, </if>
            <if test="updateTime != null" >`update_time`, </if>
            <if test="aliveFlag != null" >`alive_flag`, </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >#{id}, </if>
            <if test="eventName != null" >#{eventName}, </if>
            <if test="eventType != null" >#{eventType}, </if>
            <if test="eventTime != null" >#{eventTime}, </if>
            <if test="distinctId != null" >#{distinctId}, </if>
            <if test="anonymousId != null" >#{anonymousId}, </if>
            <if test="clientId != null" >#{clientId}, </if>
            <if test="clientAppId != null" >#{clientAppId}, </if>
            <if test="clientDeviceId != null" >#{clientDeviceId}, </if>
            <if test="clientUserAgent != null" >#{clientUserAgent}, </if>
            <if test="clientNetAddress != null" >#{clientNetAddress}, </if>
            <if test="interfaceId != null" >#{interfaceId}, </if>
            <if test="serverId != null" >#{serverId}, </if>
            <if test="serverAppId != null" >#{serverAppId}, </if>
            <if test="propertiesJson != null" >#{propertiesJson}, </if>
            <if test="creatorId != null" >#{creatorId}, </if>
            <if test="createTime != null" >#{createTime}, </if>
            <if test="updaterId != null" >#{updaterId}, </if>
            <if test="updateTime != null" >#{updateTime}, </if>
            <if test="aliveFlag != null" >#{aliveFlag}, </if>
        </trim>
    </insert>

    <delete id="deleteByPrimaryKey" >
        update `t_event_record`
        set
            `updater_id` = #{updaterId},
            `update_time` = NOW(),
            `alive_flag` = 0
        where `alive_flag` = 1
            and `id` = #{id}
    </delete>

    <delete id="deleteByPrimaryKeyList" >
        update `t_event_record`
        set
            `updater_id` = #{updaterId},
            `update_time` = NOW(),
            `alive_flag` = 0
        where `alive_flag` = 1
            and `id` in
            <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
                    #{item}
            </foreach>
    </delete>

    <delete id="deleteSelective" parameterType="sagiri.collector.persistence.entity.EventRecord" >
        update `t_event_record`
        set
            `updater_id` = #{updaterId},
            `update_time` = NOW(),
            `alive_flag` = 0
        where `alive_flag` = 1
            <if test="id != null" >and `id` = #{id}</if>
            <if test="eventName != null" >and `event_name` = #{eventName}</if>
            <if test="eventType != null" >and `event_type` = #{eventType}</if>
            <if test="eventTime != null" >and `event_time` = #{eventTime}</if>
            <if test="distinctId != null" >and `distinct_id` = #{distinctId}</if>
            <if test="anonymousId != null" >and `anonymous_id` = #{anonymousId}</if>
            <if test="clientId != null" >and `client_id` = #{clientId}</if>
            <if test="clientAppId != null" >and `client_app_id` = #{clientAppId}</if>
            <if test="clientDeviceId != null" >and `client_device_id` = #{clientDeviceId}</if>
            <if test="clientUserAgent != null" >and `client_user_agent` = #{clientUserAgent}</if>
            <if test="clientNetAddress != null" >and `client_net_address` = #{clientNetAddress}</if>
            <if test="interfaceId != null" >and `interface_id` = #{interfaceId}</if>
            <if test="serverId != null" >and `server_id` = #{serverId}</if>
            <if test="serverAppId != null" >and `server_app_id` = #{serverAppId}</if>
            <if test="propertiesJson != null" >and `properties_json` = #{propertiesJson}</if>
            <if test="creatorId != null" >and `creator_id` = #{creatorId}</if>
            <if test="createTime != null" >and `create_time` = #{createTime}</if>
            <if test="updaterId != null" >and `updater_id` = #{updaterId}</if>
            <if test="updateTime != null" >and `update_time` = #{updateTime}</if>
            <if test="aliveFlag != null" >and `alive_flag` = #{aliveFlag}</if>
    </delete>

    <update id="updateByPrimaryKey" parameterType="sagiri.collector.persistence.entity.EventRecord" >
        update `t_event_record`
        set
            `id` = #{id},
            `event_name` = #{eventName},
            `event_type` = #{eventType},
            `event_time` = #{eventTime},
            `distinct_id` = #{distinctId},
            `anonymous_id` = #{anonymousId},
            `client_id` = #{clientId},
            `client_app_id` = #{clientAppId},
            `client_device_id` = #{clientDeviceId},
            `client_user_agent` = #{clientUserAgent},
            `client_net_address` = #{clientNetAddress},
            `interface_id` = #{interfaceId},
            `server_id` = #{serverId},
            `server_app_id` = #{serverAppId},
            `properties_json` = #{propertiesJson},
            `creator_id` = #{creatorId},
            `create_time` = #{createTime},
            `updater_id` = #{updaterId},
            `update_time` = #{updateTime},
            `alive_flag` = #{aliveFlag}
        where `alive_flag` = 1
            and `id` = #{id}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="sagiri.collector.persistence.entity.EventRecord" >
        update `t_event_record`
        <set>
            <if test="id != null" >`id` = #{id}, </if>
            <if test="eventName != null" >`event_name` = #{eventName}, </if>
            <if test="eventType != null" >`event_type` = #{eventType}, </if>
            <if test="eventTime != null" >`event_time` = #{eventTime}, </if>
            <if test="distinctId != null" >`distinct_id` = #{distinctId}, </if>
            <if test="anonymousId != null" >`anonymous_id` = #{anonymousId}, </if>
            <if test="clientId != null" >`client_id` = #{clientId}, </if>
            <if test="clientAppId != null" >`client_app_id` = #{clientAppId}, </if>
            <if test="clientDeviceId != null" >`client_device_id` = #{clientDeviceId}, </if>
            <if test="clientUserAgent != null" >`client_user_agent` = #{clientUserAgent}, </if>
            <if test="clientNetAddress != null" >`client_net_address` = #{clientNetAddress}, </if>
            <if test="interfaceId != null" >`interface_id` = #{interfaceId}, </if>
            <if test="serverId != null" >`server_id` = #{serverId}, </if>
            <if test="serverAppId != null" >`server_app_id` = #{serverAppId}, </if>
            <if test="propertiesJson != null" >`properties_json` = #{propertiesJson}, </if>
            <if test="creatorId != null" >`creator_id` = #{creatorId}, </if>
            <if test="createTime != null" >`create_time` = #{createTime}, </if>
            <if test="updaterId != null" >`updater_id` = #{updaterId}, </if>
            <if test="updateTime != null" >`update_time` = #{updateTime}, </if>
            <if test="aliveFlag != null" >`alive_flag` = #{aliveFlag}, </if>
        </set>
        where `alive_flag` = 1
            and `id` = #{id}
    </update>

    <select id="countSelective" resultType="int" parameterType="sagiri.collector.persistence.entity.EventRecord" >
        select
            count(0)
        from `t_event_record`
        where `alive_flag` = 1
            <include refid="Base_Selective_Where" />
    </select>

    <select id="queryByPrimaryKey" resultMap="BaseResultMap" >
        select
            <include refid="Base_Column_List" />
        from `t_event_record`
        where `alive_flag` = 1
            and `id` = #{id}
    </select>

    <select id="queryByPrimaryKeyList" resultMap="BaseResultMap" >
        select
            <include refid="Base_Column_List" />
        from `t_event_record`
        where `alive_flag` = 1
            and `id` in
            <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
                    #{item}
            </foreach>
    </select>

    <select id="findOne" resultMap="BaseResultMap" parameterType="sagiri.collector.persistence.entity.EventRecord">
        select
            <include refid="Base_Column_List" />
        from `t_event_record`
        where `alive_flag` = 1
            <include refid="Base_Selective_Where" />
        limit 1
    </select>

    <select id="querySelective" resultMap="BaseResultMap" parameterType="sagiri.collector.persistence.entity.EventRecord">
        select
            <include refid="Base_Column_List" />
        from `t_event_record`
        where `alive_flag` = 1
            <include refid="Base_Selective_Where" />
    </select>
    <!-- **** (End) This will be covered, please do not modify. **** -->
    <!-- Generated by artoria-extend in 2020-09-15T10:55:32.830+0800. -->

</mapper>
