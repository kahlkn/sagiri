package sagiri.personal.persistence.mapper;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import sagiri.personal.persistence.entity.WebAddressCategory;

import java.util.List;

/**
 * WebAddressCategoryMapper.
 * @author Kahle
 * @date 2021-02-26T11:04:49.714+0800
 */
@Mapper
public interface WebAddressCategoryMapper {

    /* (Start) This will be covered, please do not modify. */
    /**
     * Insert.
     * @param record The object to insert
     * @return Number of rows effected
     */
    int insert(WebAddressCategory record);

    /**
     * Insert batch.
     * @param recordList A list of records to insert
     * @return Number of rows effected
     */
    int insertBatch(@Param("recordList") List<WebAddressCategory> recordList);

    /**
     * Insert selective.
     * @param record The object to insert
     * @return Number of rows effected
     */
    int insertSelective(WebAddressCategory record);

    /**
     * Delete by primary key.
     * @param id Primary key
     * @param updaterId Current operator
     * @return Number of rows effected
     */
    int deleteByPrimaryKey(@Param("id") Long id, @Param("updaterId") String updaterId);

    /**
     * Delete by primary key list.
     * @param idList Primary key list
     * @param updaterId Current operator
     * @return Number of rows effected
     */
    int deleteByPrimaryKeyList(@Param("idList") List<Long> idList, @Param("updaterId") String updaterId);

    /**
     * Delete selective.
     * @param record Delete conditions
     * @return Number of rows effected
     */
    int deleteSelective(WebAddressCategory record);

    /**
     * Update by primary key.
     * @param record Content to be updated
     * @return Number of rows effected
     */
    int updateByPrimaryKey(WebAddressCategory record);

    /**
     * Update by primary key selective.
     * @param record Content to be updated
     * @return Number of rows effected
     */
    int updateByPrimaryKeySelective(WebAddressCategory record);

    /**
     * Conditional counting.
     * @param record Query condition
     * @return Count result
     */
    int countSelective(WebAddressCategory record);

    /**
     * Query by primary key.
     * @param id Primary key
     * @return Query result
     */
    WebAddressCategory queryByPrimaryKey(@Param("id") Long id);

    /**
     * Query by primary key list.
     * @param idList Primary key list
     * @return Query result list
     */
    List<WebAddressCategory> queryByPrimaryKeyList(@Param("idList") List<Long> idList);

    /**
     * Find one.
     * @param record Query condition
     * @return Query result
     */
    WebAddressCategory findOne(WebAddressCategory record);

    /**
     * Query selective.
     * @param record Query condition
     * @return Query result list
     */
    List<WebAddressCategory> querySelective(WebAddressCategory record);
    /* (End) This will be covered, please do not modify. */
    /* Generated by artoria-extend in 2021-02-26T11:04:50.277+0800. */

}
